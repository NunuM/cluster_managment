package model

import java.util

import org.apache.mesos.{Protos, Scheduler, SchedulerDriver}

class ElScheduler extends Scheduler {


  override def statusUpdate(driver: SchedulerDriver, status: Protos.TaskStatus) = {

  }

  /**
    * Invoked when the scheduler successfully registers with a Mesos
    * master. A unique ID (generated by the master) used for
    * distinguishing this framework from others and MasterInfo
    * with the IP and port of the current master are provided as arguments.
    *
    * @param driver      The scheduler driver that was registered.
    * @param frameworkId The framework ID generated by the master.
    * @param masterInfo  Info about the current master, including IP and port.
    * @see SchedulerDriver
    * @see FrameworkID
    * @see MasterInfo
    */
  override def registered(driver: SchedulerDriver, frameworkId: Protos.FrameworkID, masterInfo: Protos.MasterInfo) = ???

  override def error(driver: SchedulerDriver, message: String) = ???

  override def offerRescinded(driver: SchedulerDriver, offerId: Protos.OfferID) = ???

  override def disconnected(driver: SchedulerDriver) = ???

  override def slaveLost(driver: SchedulerDriver, slaveId: Protos.SlaveID) = ???

  override def reregistered(driver: SchedulerDriver, masterInfo: Protos.MasterInfo) = ???

  override def frameworkMessage(driver: SchedulerDriver, executorId: Protos.ExecutorID, slaveId: Protos.SlaveID, data: Array[Byte]) = ???

  override def resourceOffers(driver: SchedulerDriver, offers: util.List[Protos.Offer]) = ???

  override def executorLost(driver: SchedulerDriver, executorId: Protos.ExecutorID, slaveId: Protos.SlaveID, status: Int) = ???
}
